<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<testCase id="35">
  <summary/>
  <steps>
    <apiCall apiId="com.provar.plugins.bundled.apis.string.Split" name="Split" testItemId="3" title="Split: a,b,c=&gt;,=&gt;Tokens">
      <tags>
        <string>disabled</string>
      </tags>
      <arguments>
        <argument id="input">
          <value class="value" valueClass="string">a,b,c</value>
        </argument>
        <argument id="separator">
          <value class="value" valueClass="string">,</value>
        </argument>
        <argument id="resultName">
          <value class="value" valueClass="string">Tokens</value>
        </argument>
        <argument id="resultScope">
          <value class="value" valueClass="string">Test</value>
        </argument>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.control.SetValues" name="SetValues" testItemId="1" title="Set Values: today">
      <tags>
        <string>disabled</string>
      </tags>
      <arguments>
        <argument id="values">
          <value class="valueList" mutable="Mutable">
            <namedValues mutable="Mutable">
              <namedValue name="valuePath">
                <value class="value" valueClass="string">a</value>
              </namedValue>
              <namedValue name="value">
                <value class="value" valueClass="string">abcd ff gg</value>
              </namedValue>
              <namedValue name="valueScope">
                <value class="value" valueClass="string">Test</value>
              </namedValue>
            </namedValues>
            <namedValues mutable="Mutable">
              <namedValue name="valuePath">
                <value class="value" valueClass="string">today</value>
              </namedValue>
              <namedValue name="value">
                <value class="funcCall" id="StringReplace"/>
              </namedValue>
              <namedValue name="valueScope">
                <value class="value" valueClass="string">Test</value>
              </namedValue>
            </namedValues>
          </value>
        </argument>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.If" name="If" testItemId="5" title="If: {Count(Tokens) &gt; 0}">
      <tags>
        <string>disabled</string>
      </tags>
      <arguments>
        <argument id="condition">
          <value class="gt">
            <lhs class="funcCall" id="Count">
              <argument id="value">
                <value class="variable">
                  <path element="Tokens"/>
                </value>
              </argument>
            </lhs>
            <rhs class="value" valueClass="decimal">0</rhs>
          </value>
        </argument>
      </arguments>
      <clauses>
        <clause name="then" testItemId="6">
          <steps>
            <apiCall apiId="com.provar.plugins.bundled.apis.control.SetValues" name="SetValues" testItemId="7" title="Set Values: b">
              <arguments>
                <argument id="values">
                  <value class="valueList" mutable="Mutable">
                    <namedValues mutable="Mutable">
                      <namedValue name="valuePath">
                        <value class="value" valueClass="string">b</value>
                      </namedValue>
                      <namedValue name="value">
                        <value class="value" valueClass="string">2015-03-14</value>
                      </namedValue>
                      <namedValue name="valueScope">
                        <value class="value" valueClass="string">Test</value>
                      </namedValue>
                    </namedValues>
                  </value>
                </argument>
              </arguments>
            </apiCall>
          </steps>
        </clause>
        <clause name="else" testItemId="8">
          <steps>
            <apiCall apiId="com.provar.plugins.bundled.apis.control.SetValues" name="SetValues" testItemId="9" title="Set Values: b">
              <arguments>
                <argument id="values">
                  <value class="valueList" mutable="Mutable">
                    <namedValues mutable="Mutable">
                      <namedValue name="valuePath">
                        <value class="value" valueClass="string">b</value>
                      </namedValue>
                      <namedValue name="value">
                        <value class="value" valueClass="string">500</value>
                      </namedValue>
                      <namedValue name="valueScope">
                        <value class="value" valueClass="string">Test</value>
                      </namedValue>
                    </namedValues>
                  </value>
                </argument>
              </arguments>
            </apiCall>
          </steps>
        </clause>
      </clauses>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.control.SetValues" name="SetValues" testItemId="11" title="Set Values: a">
      <arguments>
        <argument id="values">
          <value class="valueList" mutable="Mutable">
            <namedValues mutable="Mutable">
              <namedValue name="valuePath">
                <value class="value" valueClass="string">a</value>
              </namedValue>
              <namedValue name="value">
                <value class="value" valueClass="string">aa bbb ccc</value>
              </namedValue>
              <namedValue name="valueScope">
                <value class="value" valueClass="string">Test</value>
              </namedValue>
            </namedValues>
          </value>
        </argument>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.control.SetValues" name="SetValues" testItemId="10" title="Set Values: c">
      <arguments>
        <argument id="values">
          <value class="valueList" mutable="Mutable">
            <namedValues mutable="Mutable">
              <namedValue name="valuePath">
                <value class="value" valueClass="string">c</value>
              </namedValue>
              <namedValue name="value">
                <value class="funcCall" id="UniqueId">
                  <argument id="length">
                    <value class="value" valueClass="decimal">8</value>
                  </argument>
                  <argument id="format">
                    <value class="variable">
                      <path element="UUID"/>
                    </value>
                  </argument>
                </value>
              </namedValue>
              <namedValue name="valueScope">
                <value class="value" valueClass="string">Test</value>
              </namedValue>
            </namedValues>
          </value>
        </argument>
      </arguments>
    </apiCall>
  </steps>
</testCase>
